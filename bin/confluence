#!/usr/bin/env node
// -*- mode: js -*-

var toMarkdown =                  require('to-markdown');
var util =                        require('util');
var Confluence =                  require('../lib/Confluence');
var fs =                          require('fs');
var argv =                        require('yargs').argv;
var config =                      require('../config/confluenceConfig');
var program =                     require('commander')
var version =                     require('../package.json').version;
var prompt =                      require('prompt');
var colors =                      require('colors/safe');

var expand = "body.view,history,children.page.results.body.view,ancestors,descendants.page,space";

program
	.version(version)
	.option('-t --title [type]', 'Change title')
	.option('-d --data-path [type]', 'Change data path')
	.option('-u --username [type]', 'Change user name')
	.option('-p --password [type]', 'Change password')
	.option('-r --public-dir[type] ', 'Change public directory')
	.option('-i --img-dir [type]', 'Change images directory');

program
	.command('show_configs')
	.description('show current configuration')
	.action(function() {
		console.log("Show Config");
	});

program
	.command('create_configs') 
	.description('create configurations')
	.action(function() {
		var schema = {
			properties: {
				username: {
					require: true,
					description: colors.magenta("What is confluence\'s user name?")
				},
				password: {
					hidden: true,
					require: true,
					description: colors.magenta("What is confluence\'s user password?")
				}
			}
		}
		prompt.message = colors.rainbow("Please answer these questions to create configurations!!!")
		prompt.delimiter = colors.green("><");
		prompt.start();
		prompt.get(schema, function(err, result) {
			if (err) { 
				onErr(err);
			}
			console.log('Command-line input received:');
		    console.log('  username: ' + result.username);
    		console.log('  email: ' + result.password);
    		process.exit(1);
		});
	});

program.parse(process.argv);

function onErr(err) {
	console.log(err);
	process.exit(1);
}

// if(program.title === "") {
//     console.log("Please enter a module with option -t {title} or --title={title}");
//     return;
// } else {
// 	console.log("Title", program.title);
// }
// var confluence = Confluence({
//     username: config.username,
//     password: config.password,
//     dataPath: dataPath
// });

// confluence.getContent({
//     "title": title,
//     "expand": expand
// });

